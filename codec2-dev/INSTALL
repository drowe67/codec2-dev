==========================
 Building and Installing
==========================

NOTES:
  - Builds against system libraries by default.
  - Has NSIS packaing support for Windows (WIN32) targets. *nix systems should
    rely on 'make install' as the packages (RPM & DEB) created by CPack are
    questionable.

To compile codec2 a basic development environment and cmake are required.
If they are not installed, at a command prompt, type

Debian/Ubuntu distros:
$ sudo apt-get install build-essential cmake 

Fedora/RH distros:
$ sudo dnf groupinstall "Development Tools" \
  "C Development Tools and Libraries"
$ sudo dnf install cmake samplerate-devel speexdsp-devel

To test the cmake build make a directory anywhere underneath (or outside of)
the source directory.

Linux command line example:

$ cd /path/to/codec2
$ mkdir build_linux
$ cd build_linux
$ cmake ../ 

Install prefix defaults to /usr/local, use CMAKE_INSTALL_PREFIX to override.

(if no errors)
$ make
(as root)
$ make install

=====================
 Windows
=====================

Unlike FreeDV (fdmdv2), codec2 is not currently provided as a separate
installer, instead the windows version uses a static build of codec2.

Additionally, while MSYS2+MinGW should work, windows builds are currently
produced by cross compiling from linux.

Install MinGW & the mysys shell
   + pwd -W prints true Win32 directory
   + I also installed emacs, "tortise svn", and "cmake", and built and installed speex

$ cd codec2-dev
$ mkdir build_win32
$ cd build_win32
$ cmake -DSPEEXDSP_INCLUDE_DIR=/usr/local/include/ -G "MSYS Makefiles" ..
$ make
$ make package
